name: main
on: push

jobs:
  read-customer-config:
    runs-on: ubuntu-latest
    outputs:
      customers: ${{ steps.set-customers.outputs.customers }}
      
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v3
        
     
     - name: Retrieve customers Configuration values
       id: set-customers
       run: |
        JSON=$(cat ./ioc.json)
         # the following lines are only required for multi line json
        JSON="${JSON//'%'/'%25'}"
        JSON="${JSON//$'\n'/'%0A'}"
        JSON="${JSON//$'\r'/'%0D'}"
        echo "::set-output name=customers::${JSON}"
        echo "${JSON}"
        
  parse-customer-config:
    runs-on: ubuntu-latest
    needs: read-customer-config
    outputs:
      datasource: ${{ steps.identify.outputs.datasource}}
    strategy:
      matrix: ${{ fromJson(needs.read-customer-config.outputs.customers) }}
    steps:
      - id: identify
        run: |
          export DATASOURCE="${{  matrix }}"
          echo "datasource=${(DATASOURCE)}" >> $GITHUB_OUTPUT
          
      - run: echo Run ${{ (matrix.customer) }}
      - run: echo Run ${{ (matrix.enabled) }} 
  
  deploy-content:
    #if: ${{ needs.parse-customer-config.datasource.enabled }} == 'true'
    runs-on: windows-latest
    needs: parse-customer-config
    
    steps:    
      - run: echo Run "${{toJson(needs.parse-customer-config.outputs.datasource)}}"
      - run: echo Run ${{(needs.parse-customer-config.outputs.datasource)}}.customer
        
 
    
