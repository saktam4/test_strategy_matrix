name: main
on: push

jobs:
  read-customer-config:
    runs-on: ubuntu-latest
    outputs:
      customers: ${{ steps.set-customers.outputs.customers }}
      
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v3
        
     
     - name: Retrieve customers Configuration values
       id: set-customers
       run: |
        JSON=$(cat ./ioc.json)
         # the following lines are only required for multi line json
        JSON="${JSON//'%'/'%25'}"
        JSON="${JSON//$'\n'/'%0A'}"
        JSON="${JSON//$'\r'/'%0D'}"
        echo "::set-output name=customers::${JSON}"
        echo "${JSON}"
        
  parse-customer-config:
    runs-on: ubuntu-latest
    needs: read-customer-config
    outputs:
      customer: ${{ steps.identify.outputs.customer}}
      enabled: ${{ steps.identify.outputs.enabled}}
    strategy:
      matrix:
        ${{ insert }}: ${{ fromJson(needs.read-customer-config.outputs.customers) }}
        exclude:
          -  customers:
               enabled: false
          
        #${{ insert }}: ${{ fromJson(needs.read-customer-config.outputs.customers) }}
        #include: ${{ fromJson(needs.read-customer-config.outputs.customers) }}
        
    if: ${{needs.read-customer-config.outputs.customers != ""}} 
    steps:
    
      - name: "test"
       
        run: echo ${{matrix.customers}}
    
      - id: identify
        run: |
          export CUSTOMER="${{ matrix.customers.customer }}"
          export ENABLED="${{ matrix.customers.enabled }}"
          echo "customer=${CUSTOMER}" >> $GITHUB_OUTPUT
          echo "enabled=${ENABLED}" >> $GITHUB_OUTPUT
          
      - run: echo Run ${{ matrix}}
      #- run: echo Run ${{ (matrix.enabled) }} 
  

 
    
